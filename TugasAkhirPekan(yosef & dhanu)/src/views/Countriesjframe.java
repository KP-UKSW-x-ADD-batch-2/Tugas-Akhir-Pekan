/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.CountriesControllers;
import controllers.icontrollers.ICountriesControllers;
import daos.CountriesDAO;
import daos.idaos.ICountriesDAO;
import javax.swing.DefaultButtonModel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import models.Countries;
import tools.DbConnection;

/**
 *
 * @author User
 */
public class Countriesjframe extends javax.swing.JFrame {
    static JScrollPane scroll = new JScrollPane();   
    DefaultTableModel model;;
    
    public Countriesjframe() {
        initComponents();
        showtable();
    }
    
    void showtable(){
    DbConnection connection = new DbConnection();
        ICountriesDAO icdao = new CountriesDAO(connection.getConnection());

        DefaultTableModel dftm;
        DefaultButtonModel dfbm;

        Object[] baris = {"Country ID", "Country Name", "Region ID"};
        dftm = new DefaultTableModel(null, baris);
        tabelcountries.setModel(dftm);
        
        txt_countryId.setText("");
        txt_countryName.setText("");
        txt_regionID.setText("");

        try {
            for (Countries countgoin : icdao.getAll()) {

                String countID = (String) countgoin.getCountryID().toString();
                String countNM = (String) countgoin.getCountryname().toString();
                String countRegID = (String) countgoin.getRegionID().toString();

                String[] data = {countID, countNM, countRegID};
                dftm.addRow(data);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Something was wrong!\n" + e, "Error"
                    , JOptionPane.ERROR_MESSAGE);

        }

    }
    
    private void searching() {
        DbConnection connection = new DbConnection();
        ICountriesDAO icdao = new CountriesDAO(connection.getConnection());
        ICountriesControllers icc = new CountriesControllers(connection.getConnection());
        Countries countries = new Countries(btn_search.getText());

//        Region r = new Region();
        DefaultTableModel dt;
        DefaultButtonModel db;

        Object[] baris = {"Country ID", "Country Name", "Region ID"};
        dt = new DefaultTableModel(null, baris);
        tabelcountries.setModel(dt);

        try {
            for (Countries countgoin : icdao.search(txt_search.getText())) {
//                System.out.println(regiong.getRegionId() + " || " + regiong.getRegionName());

                String countID = (String) countgoin.getCountryID().toString();
                String countNM = (String) countgoin.getCountryname().toString();
                String countRegID = (String) countgoin.getRegionID().toString();

                String[] data = {countID, countNM, countRegID};
                dt.addRow(data);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan!\n" + e, "Error", JOptionPane.ERROR_MESSAGE);
        }

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelcountries = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_countryId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_countryName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_regionID = new javax.swing.JTextField();
        btn_insert = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        btn_refresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabelcountries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Country ID", "Country Name", "Region ID"
            }
        ));
        tabelcountries.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelcountriesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelcountries);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("COUNTRIES");

        jLabel2.setText("Country ID");

        txt_countryId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_countryIdActionPerformed(evt);
            }
        });

        jLabel3.setText("Country Name");

        jLabel4.setText("Region ID");

        btn_insert.setText("Insert");
        btn_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertActionPerformed(evt);
            }
        });

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_search.setText("Search");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        btn_refresh.setText("Refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_countryId)
                    .addComponent(txt_countryName)
                    .addComponent(txt_regionID)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_update)
                                .addGap(18, 18, 18)
                                .addComponent(btn_delete)
                                .addGap(18, 18, 18)
                                .addComponent(btn_insert)))
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_refresh)
                        .addGap(42, 42, 42)
                        .addComponent(btn_search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_countryId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_countryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_regionID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_update)
                            .addComponent(btn_delete)
                            .addComponent(btn_insert)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_search)
                    .addComponent(btn_refresh))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
       DbConnection connection = new DbConnection();
       ICountriesControllers icc = new CountriesControllers(connection.getConnection());
       Countries countries = new Countries(txt_countryId.getText(), txt_countryName.getText(), txt_regionID.getText());
       icc.update(countries);
       showtable();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
       DbConnection connection = new DbConnection();
       ICountriesControllers icc = new CountriesControllers(connection.getConnection());
       Countries countries = new Countries(txt_countryId.getText(), txt_countryName.getText(), txt_regionID.getText());
       icc.delete(countries.getCountryID());
       showtable();
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertActionPerformed
        DbConnection connection = new DbConnection();
        ICountriesControllers icc = new CountriesControllers(connection.getConnection());
        Countries countries = new Countries(txt_countryId.getText(), txt_countryName.getText(), txt_regionID.getText());
        JOptionPane.showMessageDialog(null, icc.insert(countries));
        showtable();
    }//GEN-LAST:event_btn_insertActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
       searching();
    }//GEN-LAST:event_btn_searchActionPerformed

    private void txt_countryIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_countryIdActionPerformed
        DbConnection connection = new DbConnection();
        ICountriesControllers icc = new CountriesControllers(connection.getConnection());
    }//GEN-LAST:event_txt_countryIdActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        showtable();
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void tabelcountriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelcountriesMouseClicked
        DbConnection connection = new DbConnection();
        ICountriesDAO icdao = new CountriesDAO(connection.getConnection());
        ICountriesControllers icc = new CountriesControllers(connection.getConnection());
        JTable source = (JTable) evt.getSource();
        int i = tabelcountries.getSelectedRow();
        TableModel model = tabelcountries.getModel();
        txt_countryId.setEditable(false);

        txt_countryId.setText((String) source.getModel().getValueAt(i, 0));
        txt_countryName.setText((String) source.getModel().getValueAt(i, 1));
        txt_regionID.setText((String) source.getModel().getValueAt(i, 2));
    }//GEN-LAST:event_tabelcountriesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Countriesjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Countriesjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Countriesjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Countriesjframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Countriesjframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_insert;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btn_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelcountries;
    private javax.swing.JTextField txt_countryId;
    private javax.swing.JTextField txt_countryName;
    private javax.swing.JTextField txt_regionID;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables
}
